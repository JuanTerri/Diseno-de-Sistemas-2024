<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    
    <!-- theme meta -->
    <meta name="theme-name" content="quixlab" />
  
    <title>Solicitar Heladera</title>
    <!-- Favicon icon -->
    <link rel="icon" type="image/png" sizes="16x16" href="images/favicon.png">
    <!-- Pignose Calender -->
    <link href="./plugins/pg-calendar/css/pignose.calendar.min.css" rel="stylesheet">
    <!-- Chartist -->
    <link rel="stylesheet" href="./plugins/chartist/css/chartist.min.css">
    <link rel="stylesheet" href="./plugins/chartist-plugin-tooltips/css/chartist-plugin-tooltip.css">
    <!-- Custom Stylesheet -->
    <link href="css/style.css" rel="stylesheet">

</head>

<body>

    <!--*******************
        Preloader start
    ********************-->
    <div id="preloader">
        <div class="loader">
            <svg class="circular" viewBox="25 25 50 50">
                <circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="3" stroke-miterlimit="10" />
            </svg>
        </div>
    </div>
    <!--*******************
        Preloader end
    ********************-->

    
    <!--**********************************
        Main wrapper start
    ***********************************-->
    <div id="main-wrapper">

        <!--**********************************
            Nav header start
        ***********************************-->
        <div class="nav-header">
            <div class="brand-logo">
                <a href="index">
                    <b class="logo-abbr"><img src="images/logo.png" alt=""> </b>
                    <span class="logo-compact"><img src="./images/logo_n.png" alt=""></span>
                    <span class="brand-title">
                        <img src="images/logo_n.png" alt="">
                    </span>
                </a>
            </div>
        </div>
        <!--**********************************
            Nav header end
        ***********************************-->

        <!--**********************************
            Header start
        ***********************************-->
        <div class="header">    
            <div class="header-content clearfix">
                
                <div class="nav-control">
                    <div class="hamburger">
                        <span class="toggle-icon"><i class="icon-menu"></i></span>
                    </div>
                </div>
                <div class="header-left">
                </div>
                <div class="header-right">
                    <ul class="clearfix">

                        <li class="icons dropdown">
                            <div class="user-img c-pointer position-relative"   data-toggle="dropdown">
                                 <img src="images/usu.png" height="40" width="40" alt="">
                            </div>
                            <div class="drop-down dropdown-profile animated fadeIn dropdown-menu">
                                <div class="dropdown-content-body">
                                    <ul>
                                        <li>
                                            <a href="app-profile"><i class="icon-user"></i> <span>Mi cuenta</span></a>
                                        </li>
                                        
                                        <hr class="my-2">
                                        <li>
                                            <a href="#" onclick="document.getElementById('logout-form').submit(); return false;"><i class="icon-key"></i> <span>Cerrar sesión</span></a>

                                            <form id="logout-form" action="/logout" method="POST" style="display: none;"></form>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <!--**********************************
            Header end ti-comment-alt
        ***********************************-->

        <!--**********************************
            Sidebar start
        ***********************************-->
        <div class="nk-sidebar">
            <div class="nk-nav-scroll">
                <ul class="metismenu" id="menu">
                    {{#each menu as | link |}}
                        <li>
                            <a href="{{link.href}}" aria-expanded="false">
                                <i class="{{link.icono}} menu-icon"></i><span class="nav-text">{{link.titulo}}</span>
                            </a>
                        </li>
                    {{/each}}
                </ul>
            </div>
        </div>
        <!--**********************************
            Sidebar end
        ***********************************-->

        <!--**********************************
            Content body start
        ***********************************-->
        <div class="content-body">
            
            <div style="display: flex;">
                <div class="col-lg-6" style="margin-top: 15px;">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Datos de la heladera</h4>
                            <div class="basic-form">
                                <form action="/nueva-heladera" method="post">
                                    <div class="form-group">
                                        <label>Nombre</label>
                                        <input type="text" name="nombre" class="form-control" placeholder="Nombre de la heladera" required>
                                    </div>
                                    <div class="form-group">
                                        <label>Ciudad</label>
                                        <input type="text" name="ciudad" class="form-control" placeholder="Ciudad" required>
                                    </div>
                                    <div class="form-group">
                                        <label>Localidad</label>
                                        <select class="form-control" required name="localidad">
                                            <option value="" disabled selected>Localidad</option>
                                            {{#each listadoLocalidades.localidades}}
                                                <option value="{{this.nombre}}">{{this.titulo}}</option>
                                            {{/each}}
                                        </select>
                                    </div>
                                    <div class="form-row">
                                        <div class="form-group col-md-6">
                                            <label>Calle</label>
                                            <input type="text" name="calle" class="form-control" placeholder="Calle" required>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <label>Altura</label>
                                            <input type="number" min="1" name="altura" class="form-control" placeholder="Altura" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Cantidad de viandas</label>
                                        <input type="number" min="{{estadisticas.heladeraMasChica}}" max="{{estadisticas.heladeraMasGrande}}" name="tamanioPedido" class="form-control" placeholder="Cantidad de viandas requerido" required>
                                        <label style="margin-top: 10px">
                                            Nuestras heladeras más chicas pueden tener
                                            <b>{{estadisticas.heladeraMasChica}}</b> viandas, mientras que las más grandes tienen hasta <b>{{estadisticas.heladeraMasGrande}}</b>.
                                            Una heladera promedio de <b>{{estadisticas.heladeraPromedio}}</b> viandas hace que unas <b>{{estadisticas.personasPromedio}}</b>
                                            personas se acerquen a ella en un día.
                                        </label>
                                    </div>
                                    <div class="coordinates">
                                        <label>
                                            Latitud:
                                            <input type="text" id="latitude" name="latitud" readonly />
                                        </label>
                                        <label>
                                            Longitud:
                                            <input type="text" id="longitude" name="longitud" readonly />
                                        </label>
                                    </div>
                                    <button type="submit" class="btn btn-success">Solicitar</button>
                                </form>                                
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6" style="margin-top: 15px;">
                    <div class="card">
                        <div class="card-body" style="padding: 64px 29px;">
                            <div id="map" class="mapa-nueva-heladera"></div>
                            <!-- Slider para radio -->
                            <div style="margin-top: 20px;">
                                <label for="radius-slider">Radio de para la sugerencia (metros):</label>
                                <input type="range" id="radius-slider" min="100" max="5000" value="1000" step="100">
                                <span id="radius-value">1000</span> metros
                                <button id="generate-points" class="btn btn-primary" style="margin-left: 10px;">Nueva sugerencia</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <!--**********************************
            Content body end
        ***********************************-->
        
        
        <!--**********************************
            Footer start
        ***********************************-->
        <div class="footer">
            <div class="copyright">
                <p>Trabajo Integrador DDS 2024 Grupo 12</p>
            </div>
        </div>
        <!--**********************************
            Footer end
        ***********************************-->
    </div>
    <!--**********************************
        Main wrapper end
    ***********************************-->

    <!--**********************************
        Scripts
    ***********************************-->
    <script src="plugins/common/common.min.js"></script>
    <script src="js/custom.min.js"></script>
    <script src="js/settings.js"></script>
    <script src="js/gleek.js"></script>
    <script src="js/styleSwitcher.js"></script>

    <!-- Chartjs -->
    <script src="./plugins/chart.js/Chart.bundle.min.js"></script>
    <!-- Circle progress -->
    <script src="./plugins/circle-progress/circle-progress.min.js"></script>
    <!-- Datamap -->
    <script src="./plugins/d3v3/index.js"></script>
    <script src="./plugins/topojson/topojson.min.js"></script>
    <script src="./plugins/datamaps/datamaps.world.min.js"></script>
    <!-- Morrisjs -->
    <script src="./plugins/raphael/raphael.min.js"></script>
    <script src="./plugins/morris/morris.min.js"></script>
    <!-- Pignose Calender -->
    <script src="./plugins/moment/moment.min.js"></script>
    <script src="./plugins/pg-calendar/js/pignose.calendar.min.js"></script>
    <!-- ChartistJS -->
    <script src="./plugins/chartist/js/chartist.min.js"></script>
    <script src="./plugins/chartist-plugin-tooltips/js/chartist-plugin-tooltip.min.js"></script>

    <script src="./js/dashboard/dashboard-1.js"></script>

    <script
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBpLD7qIQmAy7RyR26CDKPafLsTrZ4oNjc&callback=initMap&libraries=marker&v=beta"
            async
            defer
    ></script>

    <script>
        function initMap() {
            const map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: -34.649518, lng: -58.552020 },
                zoom: 10,
            });

            // Elementos de los inputs
            const latitudeInput = document.getElementById('latitude');
            const longitudeInput = document.getElementById('longitude');

            // Función para actualizar los inputs
            const updateCoordinates = () => {
                const center = map.getCenter();
                latitudeInput.value = center.lat().toFixed(6); // Limita a 6 decimales
                longitudeInput.value = center.lng().toFixed(6);
            };

            // Listener para capturar las coordenadas del centro
            map.addListener('center_changed', updateCoordinates);

            // Inicializar inputs con la posición inicial del mapa
            updateCoordinates();

            // Crear un marcador personalizado para el centro
            const centerMarker = new google.maps.Marker({
                position: map.getCenter(),
                map,
                icon: {
                    path: google.maps.SymbolPath.CIRCLE, // Usar un círculo como ícono
                    fillColor: "#7571f9", // Color de relleno
                    fillOpacity: 0.8, // Opacidad del relleno
                    strokeColor: "#000000", // Color del borde
                    strokeWeight: 2, // Grosor del borde
                    scale: 10, // Tamaño del círculo
                },
                zIndex: 1000, // Asegurar que esté sobre otros elementos
            });

            // Actualizar la posición del marcador cuando el centro del mapa cambie
            map.addListener('center_changed', () => {
                centerMarker.setPosition(map.getCenter());
            });

            // Obtener el slider y el valor del radio
            const radiusSlider = document.getElementById('radius-slider');
            const radiusValue = document.getElementById('radius-value');

            // Crear un círculo inicial
            const circle = new google.maps.Circle({
                strokeColor: "#33AA33",
                strokeOpacity: 0.4,
                strokeWeight: 2,
                fillColor: "#33FF33",
                fillOpacity: 0.15,
                map,
                center: map.getCenter(),
                radius: 1000, // Radio inicial en metros
            });

            // Actualizar el círculo cuando el centro del mapa cambie
            map.addListener('center_changed', () => {
                circle.setCenter(map.getCenter());
            });

            // Actualizar el círculo cuando el slider cambie
            radiusSlider.addEventListener('input', () => {
                const radius = parseInt(radiusSlider.value, 10);
                circle.setRadius(radius); // Actualizar el radio del círculo
                radiusValue.textContent = radius; // Actualizar el valor mostrado
            });

            // Array para almacenar los marcadores de los puntos sugeridos
            let suggestedMarkers = [];

            // Función para obtener puntos sugeridos desde el servidor
            const fetchSuggestedPoints = async () => {
                const center = circle.getCenter();
                const radius = circle.getRadius();

                // Hacer la llamada API al servidor Javalin
                const response = await fetch(`/puntos-sugeridos?latitud=${center.lat()}&longitud=${center.lng()}&radio=${radius}`);
                const puntosSugeridos = await response.json();

                // Eliminar los marcadores anteriores
                suggestedMarkers.forEach(marker => marker.setMap(null));
                suggestedMarkers = [];

                // Mostrar los nuevos puntos sugeridos en el mapa
                puntosSugeridos.forEach(punto => {
                    const marker = new google.maps.Marker({
                        position: { lat: punto.latitud, lng: punto.longitud },
                        map,
                        icon: {
                            path: google.maps.SymbolPath.CIRCLE,
                            fillColor: "#00FF00", // Color verde para los puntos sugeridos
                            fillOpacity: 0.8,
                            strokeColor: "#000000",
                            strokeWeight: 1,
                            scale: 5, // Tamaño más pequeño para los puntos sugeridos
                        },
                    });
                    suggestedMarkers.push(marker);
                });
            };

            // Asignar la función al botón
            const generatePointsButton = document.getElementById('generate-points');
            generatePointsButton.addEventListener('click', fetchSuggestedPoints);
            }

            initMap();
    </script>

</body>

</html>
